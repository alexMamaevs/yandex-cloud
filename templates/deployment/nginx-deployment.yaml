apiVersion: apps/v1	# В отношении версии кластера k8s используйте kubectl api-versions для просмотра версии, поддерживаемой текущим кластером
kind: Deployment	# Тип конфигурации, в которой мы используем Deployment
metadata:	        #   Метаданные, то есть некоторые основные атрибуты и информация о развертывании.
  name: nginx-deployment	# Название развертывания
  labels:	    #Tag позволяет гибко определять местонахождение одного или нескольких ресурсов, ключ и значение можно настраивать, а также определять несколько групп. В настоящее время нет необходимости понимать
    app: nginx	# Установите ключ для приложения и значение для метки nginx для развертывания
spec:	        # Это описание развертывания, которое можно понять как то, как вы ожидаете, что развертывание будет использоваться в k8s
  replicas: 2	# Используйте развертывание для создания экземпляра приложения
  selector:	    # Селектор тегов, работает вместе с указанными выше тегами, в настоящее время нет необходимости понимать
    matchLabels: # Выберите ресурс, содержащий тег app: nginx
      app: nginx
  template:	    # Это шаблон выбранного или созданного Pod
    metadata:	# Метаданные пода
      labels:	# Pod’s label, указанный выше селектор должен выбрать Pod, который содержит ярлык app: nginx
        app: nginx
    spec:	    # Функции, которую реализует Pod (то есть развертывание в Pod)
      containers:	# Создать контейнер, который совпадает с контейнером в докере
      - name: nginx	# название контейнера
        image: nginx:1.14 # Образ nginx: для создания контейнера
        ports: # Порты на которых будет доступен сервис.
        - containerPort: 80 # порт контейнера
          hostPort: 8888 # Внешний порт контейнера, на этом порту сервис будет доступен из внешней сети.